# Кривко Сергей ИУ7-14Б
# Вычисление сторон треугольника и его медианы, проведенной из наибольшего угла
# Выяснение, является ли треугольник равнобедренным
# Проверка принадлежности точки треугольнику

# Ввод координат первой точки
x1, y1 = map(int, input('Введите координаты первой точки через пробел: ').split())
# Ввод координат второй точки
x2, y2 = map(int, input('Введите координаты второй точки через пробел: ').split())
# Ввод координат третьей точки
x3, y3 = map(int, input('Введите координаты третьей точки через пробел: ').split())

# Вычисление длин сторон
side1 = ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5
side2 = ((x2 - x3) ** 2 + (y2 - y3) ** 2) ** 0.5
side3 = ((x3 - x1) ** 2 + (y3 - y1) ** 2) ** 0.5

eps = 10 ** (-8)
# Проверка треугольника на вырожденность
if abs(side1 + side2 - side3) < eps or abs(side2 + side3 - side1) < eps or abs(side1 + side3 - side2) < eps:
    print('Треугольник вырожденный')
else:
    # Наибольший угол треугольника лежит напротив его наибольшей стороны, поэтому
    # находим наибольшую сторону и вычисляем длину медианы по формуле
    if side1 > side2:
        if side1 > side3:
            median = (2 * side2 ** 2 + 2 * side3 ** 2 - side1 ** 2) ** 0.5 / 2
        else:
            median = (2 * side1 ** 2 + 2 * side2 ** 2 - side3 ** 2) ** 0.5 / 2
    elif side2 > side3:
        median = (2 * side1 ** 2 + 2 * side3 ** 2 - side2 ** 2) ** 0.5 / 2
    else:
        median = (2 * side1 ** 2 + 2 * side2 ** 2 - side3 ** 2) ** 0.5 / 2

    # Вывод данных
    print('Стороны треугольника: {0:6g}, {1:6g}, {2:6g}'.format(side1, side2, side3))
    print('Медиана, проведенная из наибольшего угла: {0:6g}'.format(median))

    # Сравниваем стороны треугольника, чтобы выяснить, является ли он равнобедренным
    if abs(side1 - side2) < eps or abs(side2 - side3) < eps or abs(side1 - side3) < eps:
        print('Треугольник является равнобедренным')
    else:
        print('Треугольник не является равнобедренным')

    # Ввод координат точки
    x0, y0 = map(int, input('Введите координаты точки через пробел: ').split())

    # Находим промежуточные значения q1, q2 и q3
    q1 = (y2 - y1) * x0 - (x2 - x1) * y0 + x2 * y1 - y2 * x1
    q2 = (y3 - y2) * x0 - (x3 - x2) * y0 + x3 * y2 - y3 * x2
    q3 = (y1 - y3) * x0 - (x1 - x3) * y0 + x1 * y3 - y1 * x3

    # Если все три значения одновременно больше (меньше) нуля, то точка лежит внутри треугольника
    if (q1 > 0) == (q2 > 0) == (q3 > 0):
        print('Точка принадлежит треугольнику')
        # Вычисляем расстояния до всех сторон и выбираем наименьшее
        distance1 = abs(q1) / ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5
        distance2 = abs(q2) / ((x2 - x3) ** 2 + (y2 - y3) ** 2) ** 0.5
        distance3 = abs(q3) / ((x3 - x1) ** 2 + (y3 - y1) ** 2) ** 0.5
        min_distance = min(distance1, distance2, distance3)
        print('Расстояние от точки до ближайшей стороны: {0:6g}'.format(min_distance))
    else:
        print('Точка НЕ принадлежит треугольнику')
